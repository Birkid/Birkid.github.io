<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python基础之Class（类）</title>
      <link href="/posts/4ec73582.html"/>
      <url>/posts/4ec73582.html</url>
      
        <content type="html"><![CDATA[<h4 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h4><h1 id="创建与使用"><a href="#创建与使用" class="headerlink" title="创建与使用"></a>创建与使用</h1><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>​    解读：首先创建一个名叫”小狗“的类，随后定义两个形参name与age。下面定义了两个函数sit与stand，让后期可以随时去调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># class 小狗():</span><br><span class="line">#     &quot;模拟尝试&quot;</span><br><span class="line">#     def __init__(self,name ,age):</span><br><span class="line">#         &quot;初始化名字和年龄&quot;</span><br><span class="line">#         self.name = name</span><br><span class="line">#         self.age = age</span><br><span class="line">#     def sit(self):                  #创建一个蹲下函数</span><br><span class="line">#         print(self.name + &quot;蹲下&quot;)</span><br><span class="line">#     def stand(self):                #创建一个站起来函数</span><br><span class="line">#         print(self.name + &quot;站起来&quot;)</span><br><span class="line">#</span><br><span class="line"># dog = 小狗(&#x27;旺财&#x27;,6)</span><br><span class="line"># dog2 = 小狗(&#x27;笨笨&#x27;,7)</span><br><span class="line"># print(&quot;我的小狗叫&quot;+ dog.name + &quot;。它今年&quot;+ str(dog.age)+&quot;岁了&quot;)</span><br><span class="line"># print(&quot;还有一条叫&quot;+ dog2.name + &quot;。它今年&quot;+ str(dog2.age)+&quot;岁了&quot;)</span><br><span class="line"># dog.sit()</span><br><span class="line"># dog2.sit()</span><br><span class="line"># dog.stand()</span><br></pre></td></tr></table></figure><h1 id="类的用法"><a href="#类的用法" class="headerlink" title="类的用法"></a>类的用法</h1><h3 id="在类中新增函数"><a href="#在类中新增函数" class="headerlink" title="在类中新增函数"></a>在类中新增函数</h3><p>​    解读：首先定义了一个类的名称”诛仙“，其中包含几种形参。随后定义一个名叫”角色“的函数，函数内包含了可供直接调用的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class 诛仙():</span><br><span class="line">    def __init__(self,门派,武器,坐骑,技能):</span><br><span class="line">        self.门派 = 门派</span><br><span class="line">        self.武器 = 武器</span><br><span class="line">        self.坐骑 = 坐骑</span><br><span class="line">        self.技能 = 技能</span><br><span class="line">    def 角色(self):</span><br><span class="line">        角色信息 = self.门派 + self.坐骑 + self.武器 + self.技能</span><br><span class="line">        print(&quot;创建角色成功.&quot;+ &quot;\n你的人物门派是:&quot;+self.门派+&quot;\n坐骑是：&quot;+</span><br><span class="line">              self.坐骑+&quot;\n武器是:&quot;+self.武器+&quot;\n技能是:&quot;+self.技能)</span><br><span class="line">        return 角色信息</span><br><span class="line">a = 诛仙(&quot;青云&quot;,&quot;剑&quot;,&quot;马&quot;,&quot;御剑诀&quot;)</span><br><span class="line">print(a.角色())</span><br></pre></td></tr></table></figure><p>​    解读：新增一个形参”速度“并给予赋值，随后新增一个名叫“人物速度”的函数，把新增的形参用到。并在底下修改了形参的值并调用了这个函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class 诛仙():</span><br><span class="line">    def __init__(self,门派,武器,坐骑,技能):</span><br><span class="line">        self.门派 = 门派</span><br><span class="line">        self.武器 = 武器</span><br><span class="line">        self.坐骑 = 坐骑</span><br><span class="line">        self.技能 = 技能</span><br><span class="line">        self.速度= 0          #新增形参并赋值</span><br><span class="line">    def 角色(self):</span><br><span class="line">        角色信息 = self.门派 + self.坐骑 + self.武器 + self.技能</span><br><span class="line">        print(&quot;创建角色成功.&quot;+ &quot;\n你的人物门派是:&quot;+self.门派+&quot;\n坐骑是：&quot;+</span><br><span class="line">              self.坐骑+&quot;\n武器是:&quot;+self.武器+&quot;\n技能是:&quot;+self.技能)</span><br><span class="line">        return 角色信息</span><br><span class="line">    def 人物速度(self):                         </span><br><span class="line">        print(&quot;人物移动速度是:&quot;+ str(self.速度))</span><br><span class="line">a = 诛仙(&quot;青云&quot;,&quot;剑&quot;,&quot;马&quot;,&quot;御剑诀&quot;)</span><br><span class="line">print(a.角色())</span><br><span class="line">a.速度 = 44                   #直接修改值</span><br><span class="line">a.人物速度()</span><br></pre></td></tr></table></figure><h3 id="继承类"><a href="#继承类" class="headerlink" title="继承类"></a>继承类</h3><p>​    在同一目录下，新增一个类称号继承。其中一开始定义的类叫父类，下面新增的类，叫子类</p><p>父类____</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class 诛仙():</span><br><span class="line">    def __init__(self,门派,武器,坐骑,技能):</span><br><span class="line">        self.门派 = 门派</span><br><span class="line">        self.武器 = 武器</span><br><span class="line">        self.坐骑 = 坐骑</span><br><span class="line">        self.技能 = 技能</span><br><span class="line">    def 角色(self):</span><br><span class="line">        角色信息 = self.门派 + self.坐骑 + self.武器 + self.技能</span><br><span class="line">        print(&quot;创建角色成功.&quot;+ &quot;\n你的人物门派是:&quot;+self.门派+&quot;\n坐骑是：&quot;+</span><br><span class="line">              self.坐骑+&quot;\n武器是:&quot;+self.武器+&quot;\n技能是:&quot;+self.技能)</span><br><span class="line">        return 角色信息</span><br><span class="line">a = 诛仙(&quot;青云&quot;,&quot;剑&quot;,&quot;马&quot;,&quot;御剑诀&quot;)</span><br><span class="line">print(a.角色())</span><br></pre></td></tr></table></figure><p>子类____</p><p>​    解读：新增一个类的名称，括号内填写要继承父类名称。随后初始化父类的属性，并用 super() 函数让子类与父类相关联。下面就可以调用父类的定义函数了。</p><p>​    在子类中，仍旧可以新增函数，先新增一个形参，随后定义个一个函数调用形参</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class 诛仙2(诛仙):                          #标记子类，括号内填写继承的父类</span><br><span class="line">    def __init__(self,门派,武器,坐骑,技能):     #初始化父类的属性</span><br><span class="line">        super().__init__(门派,武器,坐骑,技能)   #子类与父类相关联</span><br><span class="line">        self.更新 = &quot;新的门派&quot;                   #新增一个函数并赋值</span><br><span class="line">    def 更新内容(self):</span><br><span class="line">        print(&quot;次日更新 &quot;+ str(self.更新) + &quot;了&quot;)      </span><br><span class="line">c = 诛仙2(&quot;天音&quot;,&quot;杖&quot;,&quot;龙&quot;,&quot;大慈大悲&quot;)</span><br><span class="line">print(c.角色())</span><br><span class="line">c.更新内容()      </span><br></pre></td></tr></table></figure><h3 id="新增一个类，提供调用"><a href="#新增一个类，提供调用" class="headerlink" title="新增一个类，提供调用"></a>新增一个类，提供调用</h3><h4 id="父类"><a href="#父类" class="headerlink" title="父类"></a>父类</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class 诛仙():</span><br><span class="line">    def __init__(self,门派,武器,坐骑,技能):</span><br><span class="line">        self.门派 = 门派</span><br><span class="line">        self.武器 = 武器</span><br><span class="line">        self.坐骑 = 坐骑</span><br><span class="line">        self.技能 = 技能</span><br><span class="line">    def 角色(self):</span><br><span class="line">        角色信息 = self.门派 + self.坐骑 + self.武器 + self.技能</span><br><span class="line">        print(&quot;创建角色成功.&quot;+ &quot;\n你的人物门派是:&quot;+self.门派+&quot;\n坐骑是：&quot;+</span><br><span class="line">              self.坐骑+&quot;\n武器是:&quot;+self.武器+&quot;\n技能是:&quot;+self.技能)</span><br><span class="line">        return 角色信息</span><br></pre></td></tr></table></figure><h4 id="新增类"><a href="#新增类" class="headerlink" title="新增类"></a>新增类</h4><p>​    概述：新增一个名为“时装”的类，里面包含一个形参，并在此类下定义了一个函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class 时装():</span><br><span class="line">    def __init__(self,时装品类 = 30):</span><br><span class="line">        self.时装品类 = 时装品类</span><br><span class="line">    def 时装描述(self):</span><br><span class="line">        print(&quot;新增的时装品类一共有&quot;+ str(self.时装品类)+&quot;请鉴赏&quot;)</span><br></pre></td></tr></table></figure><h4 id="子类"><a href="#子类" class="headerlink" title="子类"></a>子类</h4><p>​    概述：在子类下新增一个形参等于上面新添加的一个类 </p><p>​    c.引用时装类.时装描述()        理解为 c 变量下的 引用时装类（等同于上述的时装类了）这个形参所定义的一个函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class 诛仙2(诛仙):                          #标记子类，括号内填写继承的父类</span><br><span class="line">    def __init__(self,门派,武器,坐骑,技能):     #初始化父类的属性</span><br><span class="line">        super().__init__(门派,武器,坐骑,技能)   #子类与父类相关联</span><br><span class="line">        self.引用时装类 = 时装()                #新增一个形参，形参等于上面新增的一个类</span><br><span class="line">    def 更新内容(self):</span><br><span class="line">        print(&quot;次日更新 &quot;+ str(self.更新) + &quot;了&quot;)       </span><br><span class="line">c = 诛仙2(&quot;天音&quot;,&quot;杖&quot;,&quot;龙&quot;,&quot;大慈大悲&quot;)</span><br><span class="line">print(c.角色())</span><br><span class="line">c.更新内容()</span><br><span class="line">c.引用时装类.时装描述()  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyhon </tag>
            
            <tag> class </tag>
            
            <tag> 继承 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础之模块</title>
      <link href="/posts/ab79ac4e.html"/>
      <url>/posts/ab79ac4e.html</url>
      
        <content type="html"><![CDATA[<h4 id="模块可以让程序分离，降低代码块"><a href="#模块可以让程序分离，降低代码块" class="headerlink" title="模块可以让程序分离，降低代码块"></a>模块可以让程序分离，降低代码块</h4><h1 id="模块的应用"><a href="#模块的应用" class="headerlink" title="模块的应用"></a>模块的应用</h1><h3 id="导入模块"><a href="#导入模块" class="headerlink" title="导入模块"></a>导入模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#   import 文件名</span><br><span class="line">#    moule_name.fuction_name()</span><br></pre></td></tr></table></figure><h3 id="导入模块中的一项"><a href="#导入模块中的一项" class="headerlink" title="导入模块中的一项"></a>导入模块中的一项</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#  from 文件名  import 某一类名</span><br></pre></td></tr></table></figure><h3 id="使用-as-给函数指定一个别名，防止名称冲突"><a href="#使用-as-给函数指定一个别名，防止名称冲突" class="headerlink" title="使用 as 给函数指定一个别名，防止名称冲突"></a>使用 as 给函数指定一个别名，防止名称冲突</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># from 文件名 import 其中某项 as 新名称</span><br></pre></td></tr></table></figure><h3 id="使用-as-给模块指定一个别名"><a href="#使用-as-给模块指定一个别名" class="headerlink" title="使用 as 给模块指定一个别名"></a>使用 as 给模块指定一个别名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># import 文件名 as 新名称</span><br></pre></td></tr></table></figure><h3 id="导入模块中的所有函数"><a href="#导入模块中的所有函数" class="headerlink" title="导入模块中的所有函数"></a>导入模块中的所有函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># from 文件名 import *</span><br></pre></td></tr></table></figure><h1 id="模块与Class"><a href="#模块与Class" class="headerlink" title="模块与Class"></a>模块与Class</h1><h3 id="导入单个类"><a href="#导入单个类" class="headerlink" title="导入单个类"></a>导入单个类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from 模块名 import 类名</span><br></pre></td></tr></table></figure><h3 id="导入多个类"><a href="#导入多个类" class="headerlink" title="导入多个类"></a>导入多个类</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from 模块名 import 类名1,类名2</span><br></pre></td></tr></table></figure><h3 id="导入整个模块"><a href="#导入整个模块" class="headerlink" title="导入整个模块"></a>导入整个模块</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import 模块名</span><br></pre></td></tr></table></figure><h3 id="在一个模块中导入另外一个模块"><a href="#在一个模块中导入另外一个模块" class="headerlink" title="在一个模块中导入另外一个模块"></a>在一个模块中导入另外一个模块</h3>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyhon </tag>
            
            <tag> 模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyhon基础之函数</title>
      <link href="/posts/3f9923f3.html"/>
      <url>/posts/3f9923f3.html</url>
      
        <content type="html"><![CDATA[<h4 id="函数就是带名字的代码块，可以反复调用"><a href="#函数就是带名字的代码块，可以反复调用" class="headerlink" title="函数就是带名字的代码块，可以反复调用"></a>函数就是带名字的代码块，可以反复调用</h4><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h3 id="示例（一）"><a href="#示例（一）" class="headerlink" title="示例（一）"></a>示例（一）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def 函数():</span><br><span class="line">    print(&quot;最简单的函数！&quot;)</span><br><span class="line">函数()</span><br></pre></td></tr></table></figure><h3 id="示例（二）-向函数传递信息"><a href="#示例（二）-向函数传递信息" class="headerlink" title="示例（二）    向函数传递信息"></a>示例（二）    向函数传递信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def 函数(a):</span><br><span class="line">    print(&quot;最简单的函数&quot;+ a + &quot;!&quot;)</span><br><span class="line">函数(&#x27;随便写&#x27;)</span><br></pre></td></tr></table></figure><h3 id="示例（三）-位置实参（定义的是形参，后面自己填写的是实参）"><a href="#示例（三）-位置实参（定义的是形参，后面自己填写的是实参）" class="headerlink" title="示例（三）    位置实参（定义的是形参，后面自己填写的是实参）"></a>示例（三）    位置实参（定义的是形参，后面自己填写的是实参）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def china(省,市,县):</span><br><span class="line">    print(&quot;\n我在&quot;+ 省 + &quot;.&quot;)</span><br><span class="line">    print(省+&quot;的&quot;+ 市 + 县)</span><br><span class="line">china(&quot;安徽&quot;,&quot;亳州&quot;,&quot;蒙城&quot;)</span><br><span class="line">china(&quot;湖北&quot;,&quot;武汉&quot;,&quot;枣庄&quot;)</span><br></pre></td></tr></table></figure><h3 id="示例（四）-关键字形参（把形参与实参相关联）"><a href="#示例（四）-关键字形参（把形参与实参相关联）" class="headerlink" title="示例（四）    关键字形参（把形参与实参相关联）"></a>示例（四）    关键字形参（把形参与实参相关联）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def china(省,市,县):</span><br><span class="line">    print(&quot;\n我在&quot;+ 省 + &quot;.&quot;)</span><br><span class="line">    print(省+&quot;的&quot;+ 市 + 县)</span><br><span class="line">china(&quot;安徽&quot;,&quot;亳州&quot;,&quot;蒙城&quot;)</span><br><span class="line">china(县=&quot;湖北&quot;,省=&quot;武汉&quot;,市=&quot;枣庄&quot;)</span><br></pre></td></tr></table></figure><h3 id="示例（五）-默认值形参（实参没定义的时候形参代替，默认形参在形参之后）"><a href="#示例（五）-默认值形参（实参没定义的时候形参代替，默认形参在形参之后）" class="headerlink" title="示例（五）    默认值形参（实参没定义的时候形参代替，默认形参在形参之后）"></a>示例（五）    默认值形参（实参没定义的时候形参代替，默认形参在形参之后）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def china(省,市=&quot;上海&quot;,县=&quot;奉贤&quot;):</span><br><span class="line">    print(&quot;\n我在&quot;+ 省 + &quot;.&quot;)</span><br><span class="line">    print(省+&quot;的&quot;+ 市 + 县)</span><br><span class="line">china(&quot;安徽&quot;,&quot;亳州&quot;,&quot;蒙城&quot;)</span><br><span class="line">china(省=&quot;武汉&quot;)</span><br></pre></td></tr></table></figure><h1 id="返回值-（程序的简化）"><a href="#返回值-（程序的简化）" class="headerlink" title="返回值    （程序的简化）"></a>返回值    （程序的简化）</h1><h3 id="示例（一）-返回简单值"><a href="#示例（一）-返回简单值" class="headerlink" title="示例（一）    返回简单值"></a>示例（一）    返回简单值</h3><p>利用 return 返回值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def 姓名(姓,名):</span><br><span class="line">    完整的名字 = 姓 + 名</span><br><span class="line">    return 完整的名字</span><br><span class="line">结果 = 姓名(&quot;王&quot;,&quot;小二&quot;)</span><br><span class="line">print(结果)</span><br></pre></td></tr></table></figure><h3 id="示例（二）-让实参可选"><a href="#示例（二）-让实参可选" class="headerlink" title="示例（二）    让实参可选"></a>示例（二）    让实参可选</h3><p>实参可以选择，可以省略。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def china(省,市,县):</span><br><span class="line">    全称 = 省+市+县</span><br><span class="line">    return 全称</span><br><span class="line">print(china(&#x27;安徽&#x27;, &#x27;合肥&#x27;,&#x27;肥东&#x27;))</span><br><span class="line">print(china(&#x27;安徽&#x27;,&#x27;&#x27;,&#x27;肥东&#x27;))</span><br></pre></td></tr></table></figure><h3 id="返回字典"><a href="#返回字典" class="headerlink" title="返回字典"></a>返回字典</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># def china(a,b,c=&#x27;&#x27;):                #定义一个可选形参</span><br><span class="line">#     全称 = &#123;&#x27;省&#x27;:a,&#x27;市&#x27; :b&#125;</span><br><span class="line">#     if c:                           #如果包含这个值，将会被打印</span><br><span class="line">#         全称[&#x27;县&#x27;]=c</span><br><span class="line">#     return 全称</span><br><span class="line"># print(china(&#x27;安徽&#x27;, &#x27;合肥&#x27;,&#x27;肥东&#x27;))</span><br><span class="line"># print(china(&#x27;安徽&#x27;,&#x27;&#x27;,&#x27;肥东&#x27;))</span><br></pre></td></tr></table></figure><h1 id="函数的关联运用"><a href="#函数的关联运用" class="headerlink" title="函数的关联运用"></a>函数的关联运用</h1><h3 id="函数与while循环"><a href="#函数与while循环" class="headerlink" title="函数与while循环"></a>函数与while循环</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">def china(省,市,县):</span><br><span class="line">    全称 = 省+市+县</span><br><span class="line">    return 全称</span><br><span class="line">while True:</span><br><span class="line">    print(&quot;\n 输入你送在的地域名称，输入&#x27;x&#x27;退出！&quot;)</span><br><span class="line">    a1 = input(&quot;你在哪个省？\n&quot;)</span><br><span class="line">    if a1 == &#x27;x&#x27;:</span><br><span class="line">         break#利用break 让用户在初始选择的时候选择退出或继续</span><br><span class="line">    a2 = input(&quot;你在哪个市？\n&quot;)</span><br><span class="line">    a3 = input(&quot;你在哪个县？\n&quot;)</span><br><span class="line">    A = china(a1,a2,a3)</span><br><span class="line">    print(&quot;\n你在&quot;+A)</span><br></pre></td></tr></table></figure><h3 id="函数与列表"><a href="#函数与列表" class="headerlink" title="函数与列表"></a>函数与列表</h3><h4 id="传递列表"><a href="#传递列表" class="headerlink" title="传递列表"></a>传递列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def user_name(names):</span><br><span class="line">    for name in names:</span><br><span class="line">        msg = &quot;你大爷的 &quot; + name +&#x27;!&#x27;</span><br><span class="line">        print(msg)</span><br><span class="line"># users = [&#x27;aa&#x27;,&#x27;bb&#x27;,&#x27;cc&#x27;,&#x27;dd&#x27;]</span><br><span class="line"># user_name(users)</span><br><span class="line">user_name([&#x27;aa&#x27;,&#x27;vv&#x27;,&#x27;ff&#x27;])</span><br></pre></td></tr></table></figure><h4 id="修改列表"><a href="#修改列表" class="headerlink" title="修改列表"></a>修改列表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def 修改(kaishi,jieshu):</span><br><span class="line">    while kaishi:</span><br><span class="line">        xiugai = kaishi.pop()</span><br><span class="line">        print(&quot;待修改的数值有&quot;+xiugai)</span><br><span class="line">        jieshu.append(xiugai)</span><br><span class="line">def 修改后(jieshu):</span><br><span class="line">    print(&quot;已修改完成&quot;)</span><br><span class="line">    for i in jieshu:</span><br><span class="line">        print(i)</span><br><span class="line">kaishi = [&#x27;aa&#x27;,&#x27;bb&#x27;,&#x27;cc&#x27;,&#x27;dd&#x27;]</span><br><span class="line">jieshu = []</span><br><span class="line">修改(kaishi[:4],jieshu)           #切片修改副本</span><br><span class="line">修改后(jieshu)</span><br></pre></td></tr></table></figure><h1 id="函数的实参传递"><a href="#函数的实参传递" class="headerlink" title="函数的实参传递"></a>函数的实参传递</h1><h3 id="传递任意数量的实参-（利用-创建空元组填充）"><a href="#传递任意数量的实参-（利用-创建空元组填充）" class="headerlink" title="传递任意数量的实参    （利用 * 创建空元组填充）"></a>传递任意数量的实参    （利用 * 创建空元组填充）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def china_shengfen(*shengfen):</span><br><span class="line">    print(&quot;\n中国的省份包含有：&quot;)</span><br><span class="line">    for i in shengfen:</span><br><span class="line">        print(i)</span><br><span class="line">china_shengfen(&#x27;安徽&#x27;,&#x27;湖南&#x27;,&#x27;湖北&#x27;,&#x27;河北&#x27;)</span><br><span class="line">china_shengfen(&#x27;河南&#x27;,&#x27;陕西&#x27;)</span><br></pre></td></tr></table></figure><h3 id="位置实参与任意数量的实参"><a href="#位置实参与任意数量的实参" class="headerlink" title="位置实参与任意数量的实参"></a>位置实参与任意数量的实参</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def china_shengfen(renkou,*shengfen):</span><br><span class="line">    print(&quot;\n中国的省份人口&quot; + str(renkou)+&quot;的包含有：&quot;)</span><br><span class="line">    for i in shengfen:</span><br><span class="line">        print(i)</span><br><span class="line">china_shengfen(60,&#x27;安徽&#x27;,&#x27;湖南&#x27;,&#x27;湖北&#x27;,&#x27;河北&#x27;)</span><br><span class="line">china_shengfen(88,&#x27;河南&#x27;,&#x27;陕西&#x27;)</span><br></pre></td></tr></table></figure><h3 id="传递任意数量的关键字实参-（利用-创建空字典填充）"><a href="#传递任意数量的关键字实参-（利用-创建空字典填充）" class="headerlink" title="传递任意数量的关键字实参    （利用 ** 创建空字典填充）"></a>传递任意数量的关键字实参    （利用 ** 创建空字典填充）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def user_msg(first,next,**end):</span><br><span class="line">    msg = &#123;&#125;</span><br><span class="line">    msg[&#x27;姓名&#x27;] = first</span><br><span class="line">    msg[&#x27;爱好&#x27;] = next</span><br><span class="line">    for i , u  in end.items():</span><br><span class="line">        msg[i] = u</span><br><span class="line">    return msg</span><br><span class="line">a = user_msg(&#x27;狗蛋&#x27;,&#x27;打游戏&#x27;,生日 = 2022,学习 = &#x27;很差&#x27;)</span><br><span class="line">for k,v in a.items():</span><br><span class="line">    print(k,v)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyhon </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Iguacu</title>
      <link href="/posts/c9cc1d34.html"/>
      <url>/posts/c9cc1d34.html</url>
      
        <content type="html"><![CDATA[<h4 id="大概记录。留存。"><a href="#大概记录。留存。" class="headerlink" title="大概记录。留存。"></a>大概记录。留存。</h4><h1 id="平手盘"><a href="#平手盘" class="headerlink" title="平手盘"></a>平手盘</h1><h3 id="平半转平手"><a href="#平半转平手" class="headerlink" title="平半转平手"></a>平半转平手</h3><p>​    1：初盘给出平半中高水，转平半平水，短暂一个小时的冲高时间，转平手盘低水，继续冲高到中低水。给出的水位点，显现对主队信心不足，应下客队。</p><h3 id="平手"><a href="#平手" class="headerlink" title="平手"></a>平手</h3><h1 id="平半盘"><a href="#平半盘" class="headerlink" title="平半盘"></a>平半盘</h1><h3 id="平半"><a href="#平半" class="headerlink" title="平半"></a>平半</h3><p>​    1：临场前水位一直在1.0左右，对上盘信心不足，水位一直在升高降低做走水，临场降到0.86的点，这种比赛建议先放弃，走水的局，胜负不分。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 亚盘 </tag>
            
            <tag> 欧盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础之获取用户输入</title>
      <link href="/posts/3c13a46e.html"/>
      <url>/posts/3c13a46e.html</url>
      
        <content type="html"><![CDATA[<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h3 id="需要用户输入非字符串时记得添加函数"><a href="#需要用户输入非字符串时记得添加函数" class="headerlink" title="需要用户输入非字符串时记得添加函数"></a>需要用户输入非字符串时记得添加函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name = input(&#x27;你的名字叫什么?: &#x27;)</span><br><span class="line">age = int(input(&#x27;你今年多大了？: &#x27;))        #根据需求，设定名字为整数位</span><br><span class="line">height = float(input(&#x27;你的身高是多少？: &#x27;))      #根据需求，身高可以延申到小数点。</span><br><span class="line"></span><br><span class="line">print(&#x27;你好&#x27;+ name +&#x27; 欢迎光临！&#x27;)</span><br><span class="line">print(&#x27;你的年龄是&#x27;+ str(age)+ &#x27;!&#x27;)</span><br><span class="line">print(&#x27;你的身高是&#x27;+ str(height) + &#x27;!&#x27;)</span><br></pre></td></tr></table></figure><h3 id="增加提示信息"><a href="#增加提示信息" class="headerlink" title="增加提示信息"></a>增加提示信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">shuru = &quot;如果你告诉我你是谁，我将给你发信息&quot;</span><br><span class="line">shuru += &quot;\n如果你不告诉我你是谁，就算了！&quot;</span><br><span class="line">shuru += &quot;\n现在在下方输入你的名字吧:\n&quot;</span><br><span class="line">name = input(shuru)</span><br><span class="line">print(&quot;\n你好&quot;+name+&quot;!&quot;</span><br></pre></td></tr></table></figure><h3 id="if语句在获取输入的运用"><a href="#if语句在获取输入的运用" class="headerlink" title="if语句在获取输入的运用"></a>if语句在获取输入的运用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">number = int(input(&quot;输入一个数字，我能告诉你能不能被2整除:\n&quot;))</span><br><span class="line">if number % 2 == 0:</span><br><span class="line">    print(&quot;你输入的数字能被2整除&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;你输入的数字不能被2整除&quot;)</span><br></pre></td></tr></table></figure><h1 id="while循环在获取输入时的运用"><a href="#while循环在获取输入时的运用" class="headerlink" title="while循环在获取输入时的运用"></a>while循环在获取输入时的运用</h1><h3 id="while的条件表达"><a href="#while的条件表达" class="headerlink" title="while的条件表达"></a>while的条件表达</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">shuru = &quot;如果你告诉我你是谁，我将给你发信息&quot;</span><br><span class="line">shuru += &quot;\n如果你不告诉我你是谁，就说“是”！&quot;</span><br><span class="line">shuru += &quot;\n现在在下方输入你的名字吧:\n&quot;</span><br><span class="line">name = &quot;&quot;</span><br><span class="line">while name != &quot;是&quot;:</span><br><span class="line">    name = input(shuru)</span><br><span class="line">    if name != &quot;是&quot;:</span><br><span class="line">        print(&quot;\n你好&quot; + name + &quot;!&quot;)</span><br><span class="line">    elif name == &quot;是&quot;:</span><br><span class="line">        print(&quot;再见&quot;)</span><br></pre></td></tr></table></figure><h3 id="True-false-break"><a href="#True-false-break" class="headerlink" title="True     false  break"></a>True     false  break</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">shuru = &quot;如果你告诉我你是谁，我将给你发信息&quot;</span><br><span class="line">shuru += &quot;\n如果你不告诉我你是谁，就说“是”！&quot;</span><br><span class="line">shuru += &quot;\n现在在下方输入你的名字吧:\n&quot;</span><br><span class="line">name = True         #可直接简写成为while True  循环为真会一直循环，到后面跳到break停止。</span><br><span class="line">while name:</span><br><span class="line">    name = input(shuru)</span><br><span class="line">    if name == &quot;是&quot;:</span><br><span class="line">        break           #选项1</span><br><span class="line">       # name = False    #选项2</span><br><span class="line">       # print(&quot;\n你好&quot; + name + &quot;再见!&quot;)       布尔类型的值不能打印</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;\n你好&quot; + name + &quot;!&quot;)</span><br></pre></td></tr></table></figure><h3 id="continue-返回循环开头，继续执行"><a href="#continue-返回循环开头，继续执行" class="headerlink" title="continue 返回循环开头，继续执行"></a>continue 返回循环开头，继续执行</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">number = 0</span><br><span class="line">while number &lt; 10:</span><br><span class="line">    number += 1</span><br><span class="line">    if number % 2 == 0:</span><br><span class="line">        continue</span><br><span class="line">    print(number)</span><br></pre></td></tr></table></figure><h1 id="while循环在列表中的应用"><a href="#while循环在列表中的应用" class="headerlink" title="while循环在列表中的应用"></a>while循环在列表中的应用</h1><h3 id="示例（一）循环增加"><a href="#示例（一）循环增加" class="headerlink" title="示例（一）循环增加"></a>示例（一）循环增加</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">未验证用户 = [&#x27;王二&#x27;,&#x27;狗蛋&#x27;,&#x27;铁锤&#x27;,&#x27;钢镚&#x27;]</span><br><span class="line">验证用户 = []</span><br><span class="line">while 未验证用户:</span><br><span class="line">    待增加用户 =  未验证用户.pop()</span><br><span class="line">    print(&quot;用户增加：&quot;+待增加用户)</span><br><span class="line">    验证用户.append(待增加用户)</span><br><span class="line">print(&quot;\n所有用户验证完毕：&quot;)</span><br><span class="line">for i in 验证用户:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><h3 id="示例（二）循环删除"><a href="#示例（二）循环删除" class="headerlink" title="示例（二）循环删除"></a>示例（二）循环删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">china = [&#x27;安徽&#x27;,&#x27;安徽&#x27;,&#x27;北京&#x27;,&#x27;南京&#x27;,&#x27;上海&#x27;,&#x27;广州&#x27;]</span><br><span class="line">china.pop(5)             #方法一： pop 删除列表值所在的排序</span><br><span class="line">china.remove(&#x27;上海&#x27;)      #方法二： remove 删除列表中包含的值的名称</span><br><span class="line">print(china)</span><br><span class="line">while &#x27;安徽&#x27; in china:    #通过while 删除所有所给值</span><br><span class="line">    china.remove(&#x27;安徽&#x27;)</span><br><span class="line">print(china)</span><br></pre></td></tr></table></figure><h3 id="通过while循环填充字典"><a href="#通过while循环填充字典" class="headerlink" title="通过while循环填充字典"></a>通过while循环填充字典</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">调查 = &#123;&#125;</span><br><span class="line">问题= True</span><br><span class="line">while 问题:</span><br><span class="line">    名字 = input(&quot;\n你的名字叫什么？\n: &quot;)</span><br><span class="line">    爱好 = input(&quot;\n你的爱好是什么？\n: &quot;)</span><br><span class="line">    调查[名字]=爱好           #可以解释为 字典[第几页] = 里面有什么</span><br><span class="line">    询问 = input(&quot;\n还有别的需要回答吗？是或者不\n:&quot;)</span><br><span class="line">    if 询问 == &#x27;不&#x27;:</span><br><span class="line">        问题 = False</span><br><span class="line">for 名字 , 爱好 in 调查.items():</span><br><span class="line">    print(名字 + &quot;你喜欢&quot;+ 爱好</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyhon </tag>
            
            <tag> while循环 </tag>
            
            <tag> for循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础之字典</title>
      <link href="/posts/198753ed.html"/>
      <url>/posts/198753ed.html</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>字典是一系列键和值的相对应，每个键都和一个值相关联，可以通过键访问值<br>值可以是数字、字符串、列表 、字典。</p><h3 id="示例（一"><a href="#示例（一" class="headerlink" title="示例（一)"></a>示例（一)</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一周活动安排 = &#123;&#x27;周一&#x27;:&#x27;上课&#x27;,&#x27;周二&#x27;:&#x27;打游戏&#x27;,&#x27;周三&#x27;:3&#125;</span><br><span class="line">今天去干嘛 = 一周活动安排[&#x27;周二&#x27;]</span><br><span class="line">print(&quot;你今天应该去&quot;+str(今天去干嘛))</span><br></pre></td></tr></table></figure><h3 id="示例（二）将花括号回车再填写键值，便于浏览"><a href="#示例（二）将花括号回车再填写键值，便于浏览" class="headerlink" title="示例（二）将花括号回车再填写键值，便于浏览"></a>示例（二）将花括号回车再填写键值，便于浏览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">一周活动安排 = &#123;</span><br><span class="line">    &#x27;周一&#x27; : &#x27;上课&#x27;,</span><br><span class="line">    &#x27;周二&#x27; : &#x27;打游戏&#x27;,</span><br><span class="line">    &#x27;周三&#x27; : &#x27;3&#x27;</span><br><span class="line">&#125;</span><br><span class="line">今天去干嘛 = 一周活动安排[&#x27;周二&#x27;]</span><br><span class="line">print(&quot;你今天应该去&quot;+str(今天去干嘛))</span><br></pre></td></tr></table></figure><h3 id="创建空字典（增添方便）"><a href="#创建空字典（增添方便）" class="headerlink" title="创建空字典（增添方便）"></a>创建空字典（增添方便）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">食谱 = &#123;&#125;</span><br><span class="line">食谱[&#x27;鸡蛋羹&#x27;] = &#x27;egg&#x27;</span><br><span class="line">食谱[&#x27;土豆泥&#x27;] = &#x27;土豆&#x27;</span><br><span class="line">食谱[&#x27;红烧鸡块&#x27;] = &#x27;鸡肉&#x27;</span><br><span class="line">print(食谱)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="修改字典中的值"><a href="#修改字典中的值" class="headerlink" title="修改字典中的值"></a>修改字典中的值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">食谱 = &#123;&#125;</span><br><span class="line">食谱[&#x27;鸡蛋羹&#x27;] = &#x27;egg&#x27;</span><br><span class="line">食谱[&#x27;土豆泥&#x27;] = &#x27;土豆&#x27;</span><br><span class="line">食谱[&#x27;红烧鸡块&#x27;] = &#x27;鸡肉&#x27;</span><br><span class="line">print(食谱)</span><br><span class="line">食谱[&#x27;鸡蛋羹&#x27;] = &#x27;鸡蛋&#x27;</span><br><span class="line">print(食谱)</span><br></pre></td></tr></table></figure><h3 id="增加键和值"><a href="#增加键和值" class="headerlink" title="__增加键和值"></a>__增加键和值</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">食谱 = &#123;&#125;</span><br><span class="line">食谱[&#x27;鸡蛋羹&#x27;] = &#x27;egg&#x27;</span><br><span class="line">食谱[&#x27;土豆泥&#x27;] = &#x27;土豆&#x27;</span><br><span class="line">食谱[&#x27;红烧鸡块&#x27;] = &#x27;鸡肉&#x27;</span><br><span class="line">print(食谱)</span><br><span class="line">食谱[&#x27;酸菜鱼&#x27;] = &#x27;鱼&#x27;</span><br><span class="line">print(食谱)</span><br></pre></td></tr></table></figure><h3 id="删除键值（del语句）"><a href="#删除键值（del语句）" class="headerlink" title="__删除键值（del语句）"></a>__删除键值（del语句）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">食谱 = &#123;&#125;</span><br><span class="line">食谱[&#x27;鸡蛋羹&#x27;] = &#x27;egg&#x27;</span><br><span class="line">食谱[&#x27;土豆泥&#x27;] = &#x27;土豆&#x27;</span><br><span class="line">食谱[&#x27;红烧鸡块&#x27;] = &#x27;鸡肉&#x27;</span><br><span class="line">print(食谱)</span><br><span class="line">del 食谱[&#x27;鸡蛋羹&#x27;]</span><br><span class="line">print(食谱)</span><br></pre></td></tr></table></figure><h3 id="遍历（浏览）字典-for循环遍历与-items-keys-values-用法"><a href="#遍历（浏览）字典-for循环遍历与-items-keys-values-用法" class="headerlink" title="__遍历（浏览）字典  ,for循环遍历与 items  keys  values 用法"></a>__遍历（浏览）字典  ,for循环遍历与 items  keys  values 用法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">食谱 = &#123;&#125;</span><br><span class="line">食谱[&#x27;鸡蛋羹&#x27;] = &#x27;egg&#x27;</span><br><span class="line">食谱[&#x27;土豆泥&#x27;] = &#x27;土豆&#x27;</span><br><span class="line">食谱[&#x27;红烧鸡块&#x27;] = &#x27;鸡肉&#x27;</span><br><span class="line">print(食谱)</span><br><span class="line">#遍历键和值</span><br><span class="line">for key, value in 食谱.items():    #key和value可替换成其他字符，重要的是与之相对应</span><br><span class="line">    print(&quot;\n食物是&quot;+ key)</span><br><span class="line">    print(&quot;食材是&quot;+ value)</span><br><span class="line">##遍历值，if与if not 用法</span><br><span class="line">for 食物 in 食谱.keys():</span><br><span class="line">    print(食物)</span><br><span class="line">if &#x27;鸡蛋羹&#x27; in 食谱.keys():          #键是唯一的需要调用</span><br><span class="line">    print(&#x27;我们今天吃鸡蛋羹吧！&#x27;)</span><br><span class="line">print(&quot;_____分割线______&quot;)</span><br><span class="line">for 食材 in 食谱.values():</span><br><span class="line">    print(食材)</span><br><span class="line">if &#x27;猪肉&#x27; not  in 食材:</span><br><span class="line">    print(&#x27;今天吃不上猪肉了&#x27;)</span><br></pre></td></tr></table></figure><h3 id="遍历字典进行排序和剔除重复"><a href="#遍历字典进行排序和剔除重复" class="headerlink" title="__遍历字典进行排序和剔除重复"></a>__遍历字典进行排序和剔除重复</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">china = &#123;</span><br><span class="line">    &#x27;a&#x27;:&#x27;anhui&#x27;,</span><br><span class="line">    &#x27;s&#x27;:&#x27;shanghai&#x27;,</span><br><span class="line">    &#x27;b&#x27;:&#x27;beijing&#x27;,</span><br><span class="line">    &#x27;x&#x27;:&#x27;xian&#x27;,</span><br><span class="line">    &#x27;A&#x27;:&#x27;anhui&#x27;</span><br><span class="line">&#125;</span><br><span class="line">for name in sorted(china.keys()):</span><br><span class="line">    print(name + &quot;重新排序了&quot;)</span><br><span class="line">for name1 in set(china.values()):</span><br><span class="line">    print(name1 + &quot;去除重复了&quot;)</span><br></pre></td></tr></table></figure><h1 id="嵌套-列表嵌套字典，字典嵌套列表，字典嵌套字典"><a href="#嵌套-列表嵌套字典，字典嵌套列表，字典嵌套字典" class="headerlink" title="__嵌套     列表嵌套字典，字典嵌套列表，字典嵌套字典"></a>__嵌套     列表嵌套字典，字典嵌套列表，字典嵌套字典</h1><h3 id="列表嵌套字典"><a href="#列表嵌套字典" class="headerlink" title="列表嵌套字典"></a>列表嵌套字典</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">zidian1 = &#123;&#x27;安徽&#x27;:&#x27;合肥&#x27;&#125;</span><br><span class="line">zidian2 = &#123;&#x27;湖北&#x27;:&#x27;武汉&#x27;&#125;</span><br><span class="line">zidian3 = &#123;&#x27;四川&#x27;:&#x27;重庆&#x27;&#125;</span><br><span class="line">libiao = [zidian1,zidian2,zidian3]</span><br><span class="line">for x in libiao:</span><br><span class="line">    print(x)</span><br></pre></td></tr></table></figure><h3 id="循环字典修改字典参数"><a href="#循环字典修改字典参数" class="headerlink" title="循环字典修改字典参数"></a>循环字典修改字典参数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">china = []</span><br><span class="line">for y in range(5):</span><br><span class="line">    zidian = &#123;&#x27;安徽&#x27;:&#x27;合肥&#x27;,&#x27;首都&#x27;:&#x27;北京&#x27;,&#x27;年份&#x27;:2022&#125;</span><br><span class="line">    china.append(zidian)</span><br><span class="line">for z in china[0:2]:</span><br><span class="line">    if z[&#x27;安徽&#x27;] == &#x27;合肥&#x27;:</span><br><span class="line">        z[&#x27;安徽&#x27;] = &#x27;亳州&#x27;</span><br><span class="line">        z[&#x27;年份&#x27;] = 2345</span><br><span class="line">    print(z)</span><br><span class="line">print(china)</span><br></pre></td></tr></table></figure><h3 id="字典嵌套列表"><a href="#字典嵌套列表" class="headerlink" title="字典嵌套列表"></a>字典嵌套列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">china = &#123;</span><br><span class="line">    &#x27;首都&#x27;:&#x27;北京&#x27;,</span><br><span class="line">    &#x27;省份&#x27;:[&#x27;安徽&#x27;,&#x27;湖南&#x27;,&#x27;湖北&#x27;,&#x27;广东&#x27;],</span><br><span class="line">    &#x27;直辖市&#x27;:[&#x27;上海&#x27;,&#x27;深圳&#x27;,&#x27;重庆&#x27;]</span><br><span class="line">&#125;</span><br><span class="line">print(&quot;中国的首都是&quot;+china[&#x27;首都&#x27;])</span><br><span class="line">for i in china[&#x27;省份&#x27;]:</span><br><span class="line">    print(&#x27;中国的省会含有&#x27;+&#x27;\t&#x27;+ i)</span><br></pre></td></tr></table></figure><h3 id="字典嵌套字典"><a href="#字典嵌套字典" class="headerlink" title="字典嵌套字典"></a>字典嵌套字典</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">china = &#123;</span><br><span class="line">    &#x27;安徽&#x27;: &#123;</span><br><span class="line">        &#x27;省会&#x27;:&#x27;合肥&#x27;,</span><br><span class="line">        &#x27;地级市&#x27;:[&#x27;阜阳&#x27;,&#x27;亳州&#x27;,&#x27;黄山&#x27;]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x27;湖南&#x27;:&#123;</span><br><span class="line">        &#x27;省会&#x27;:&#x27;长沙&#x27;,</span><br><span class="line">        &#x27;地级市&#x27;:[&#x27;张家界&#x27;,&#x27;绥德&#x27;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">for k , v in china.items():</span><br><span class="line">    print(&quot;省有&quot;+ k)</span><br><span class="line">    w = v[&#x27;省会&#x27;]</span><br><span class="line">    for i in v[&#x27;地级市&#x27;]:</span><br><span class="line">        print(i)</span><br><span class="line">    print(w)</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyhon </tag>
            
            <tag> 字典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>影音类网站推荐</title>
      <link href="/posts/3497fe02.html"/>
      <url>/posts/3497fe02.html</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h3 id="电影推荐"><a href="#电影推荐" class="headerlink" title="电影推荐"></a>电影推荐</h3><p>(<a href="https://www.mvcat.com/">https://www.mvcat.com/</a>)</p><h3 id="电影网站"><a href="#电影网站" class="headerlink" title="电影网站"></a>电影网站</h3><p>影视森林（<a href="http://www.549.tv/%EF%BC%89">http://www.549.tv/）</a><br>Libvio（<a href="https://www.libvio.fun)/">https://www.libvio.fun）</a><br>美剧 (<a href="https://uniquestream.net/">https://uniquestream.net/</a>)</p><h3 id="音乐相关"><a href="#音乐相关" class="headerlink" title="音乐相关"></a>音乐相关</h3><p>音乐磁场（<a href="https://www.hifini.com/%EF%BC%89">https://www.hifini.com/）</a><br>YOUTUBE(<a href="https://music.youtube.com/">https://music.youtube.com/</a>)<br>在线听(<a href="http://music.alang.run/#/">http://music.alang.run/#/</a>)<br>音乐课(<a href="https://www.yinyueke.net/">https://www.yinyueke.net/</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 影音 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 美剧 </tag>
            
            <tag> 音乐 </tag>
            
            <tag> 电子书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五大联赛数据</title>
      <link href="/posts/e86cd9bb.html"/>
      <url>/posts/e86cd9bb.html</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><p>球探<br>(<a href="http://jc.titan007.com/index.aspx">http://jc.titan007.com/index.aspx</a>)<br>五百<br>(<a href="https://live.500.com/">https://live.500.com/</a>)<br>澳门<br>(<a href="https://www.macauslot.com/fjt/content/page/soccer/odds/all.html?sport=1&amp;lang=sc">https://www.macauslot.com/fjt/content/page/soccer/odds/all.html?sport=1&amp;lang=sc</a>)</p><h3 id="直播"><a href="#直播" class="headerlink" title="直播"></a>直播</h3><p>直播①(<a href="https://www.yoozhibo.com/zuqiu/">https://www.yoozhibo.com/zuqiu/</a>)<br>直播②(<a href="http://www.qiuquzhibo.com/zuqiu/">http://www.qiuquzhibo.com/zuqiu/</a>)<br>直播③(<a href="https://www.aiscore.com/zht">https://www.aiscore.com/zht</a>)<br>直播④(<a href="http://www.uusnba.com/">http://www.uusnba.com/</a>)</p><h3 id="官方直播间"><a href="#官方直播间" class="headerlink" title="官方直播间"></a>官方直播间</h3><p>爱奇艺(<a href="https://sports.iqiyi.com/">https://sports.iqiyi.com/</a>)<br>咪咕视频(<a href="https://www.miguvideo.com/mgs/website/prd/sportsHomePage.html">https://www.miguvideo.com/mgs/website/prd/sportsHomePage.html</a>)<br>CCTV5(<a href="https://tv.cctv.com/live/cctv5/?spm=C28340.PANm9ivhQsG1.ExidtyEJcS5K.5">https://tv.cctv.com/live/cctv5/?spm=C28340.PANm9ivhQsG1.ExidtyEJcS5K.5</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 足球 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英超 </tag>
            
            <tag> 亚盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序类网站推荐</title>
      <link href="/posts/c302e378.html"/>
      <url>/posts/c302e378.html</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>博客园(<a href="https://www.cnblogs.com/">https://www.cnblogs.com/</a>)<br>菜鸟教程(<a href="https://www.runoob.com/python3/python3-tutorial.html">https://www.runoob.com/python3/python3-tutorial.html</a>)<br>Stackoverflow(<a href="https://stackoverflow.com/">https://stackoverflow.com/</a>)<br>Hello Github(<a href="https://hellogithub.com/">https://hellogithub.com/</a>)<br>Github(<a href="https://github.com/">https://github.com/</a>)</p><h3 id="刷题"><a href="#刷题" class="headerlink" title="刷题"></a>刷题</h3><p>Freecode(<a href="https://chinese.freecodecamp.org/learn">https://chinese.freecodecamp.org/learn</a>)</p><h3 id="破解类"><a href="#破解类" class="headerlink" title="破解类"></a>破解类</h3><p>吾爱(<a href="http://www.52pojie.cn/">http://www.52pojie.cn/</a>)<br>小众软件(<a href="https://meta.appinn.net/">https://meta.appinn.net/</a>)<br>风音应用(<a href="https://www.fy6b.com/">https://www.fy6b.com/</a>)<br>果核(<a href="https://www.ghxi.com/">https://www.ghxi.com/</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyhon </tag>
            
            <tag> java </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习类网站推荐</title>
      <link href="/posts/38fe2513.html"/>
      <url>/posts/38fe2513.html</url>
      
        <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h3 id="公开课"><a href="#公开课" class="headerlink" title="公开课"></a>公开课</h3><p>网易公开课(<a href="http://open.163.com/">http://open.163.com/</a>)<br>慕课(<a href="http://www.icourse163.org/">http://www.icourse163.org/</a>)<br>国图(<a href="http://open.nlc.cn/onlineedu/client/index.htm">http://open.nlc.cn/onlineedu/client/index.htm</a>)<br>TED(<a href="http://www.ted.com/">http://www.ted.com/</a>)</p><h3 id="资源网"><a href="#资源网" class="headerlink" title="资源网"></a>资源网</h3><p>大学生资源网(<a href="http://www.dxzy163.com/">http://www.dxzy163.com/</a>)<br>我要自学网(<a href="https://www.51zxw.net/">https://www.51zxw.net/</a>)<br>大学生自学网(<a href="http://v.dxsbb.com/">http://v.dxsbb.com/</a>)<br>语文迷(<a href="http://www.yuwenmi.com/">http://www.yuwenmi.com/</a>)</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>全历史(<a href="https://www.allhistory.com/">https://www.allhistory.com/</a>)<br>古诗文(<a href="https://www.gushiwen.org/">https://www.gushiwen.org/</a>)<br>百度汉语(<a href="http://hanyu.baidu.com/">http://hanyu.baidu.com/</a>)<br>知网(<a href="http://www.cnki.net/">http://www.cnki.net/</a>)<br>昆虫(<a href="http://microsculpture.net/treehopper.html">http://microsculpture.net/treehopper.html</a>)<br>英语学习(<a href="https://www.languageguide.org/">https://www.languageguide.org/</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 历史 </tag>
            
            <tag> 哲学 </tag>
            
            <tag> 心理学 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
